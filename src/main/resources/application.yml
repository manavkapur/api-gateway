server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: api-gateway

  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
      ssl-enabled: ${SPRING_REDIS_SSL:true}

  cloud:
    gateway:
      redis:
        enabled: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      default-filters:
        - AddResponseHeader=Access-Control-Allow-Origin, *
        - AddResponseHeader=Access-Control-Allow-Methods, GET,POST,PUT,DELETE,OPTIONS
        - name: CircuitBreaker
          args:
            name: globalCircuitBreaker
            fallbackUri: forward:/fallback/global
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 5
            redis-rate-limiter.burstCapacity: 10
            key-resolver: "#{@ipKeyResolver}"

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: ${EUREKA_HOSTNAME:localhost}

resilience4j:
  circuitbreaker:
    instances:
      globalCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        automaticTransitionFromOpenToHalfOpenEnabled: true

logging:
  level:
    org.springframework.cloud.gateway: INFO
    root: INFO
